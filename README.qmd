---
title: 2023 ACS update & community profiles
format: gfm
engine: knitr
execute: 
  echo: false
---

<!-- README.md is generated from README.Rmd. Please edit that file -->

Distribution-ready files are in [`to_distro`](to_distro). CSV file for populating website's community profiles is in [`website`](website).

## Output

```{r}
#| label: tree
#| comment: ""
files <- data.frame(file = paste(".", list.files(c("fetch_data", "output_data", "to_distro", "website"), full.names = TRUE), sep = "/"))

data.tree::FromDataFrameTable(files, pathName = "file")
```


## Development

Several global functions and other objects are loaded when each script sources `utils/pkgs_utils.R`, including all loaded libraries. There are two global variables for years: `yr` and `cws_yr`, for the ACS endyear and the CWS year, respectively. Those are both set within the snakefile, and can be taken as positional arguments by `pkgs_utils.R`.

To build the full project in the proper order, on the command line run:

```bash
snakemake all
```

or rebuild just once piece of it, e.g. `snakemake prep_distro`.

Calling `snakemake testvars` will verify what years are being used by sourcing just `utils/pkgs_utils.R`.

Additionally, this repo has a release of data in order to have a single source of the year's ACS data for other projects. 
To create and upload the release, run: 

```bash
snakemake release
```

```{bash}
snakemake --filegraph | dot -T png > dag.png
```

![snakefile](dag.png)


